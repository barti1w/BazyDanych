CREATE TABLE REGIONS AS SELECT * FROM HR.REGIONS;
CREATE TABLE COUNTRIES AS SELECT * FROM HR.COUNTRIES;
CREATE TABLE DEPARTMENTS AS SELECT * FROM HR.DEPARTMENTS;
CREATE TABLE EMPLOYEES AS SELECT * FROM HR.EMPLOYEES;
CREATE TABLE LOCATIONS AS SELECT * FROM HR.LOCATIONS;
CREATE TABLE JOB_HISTORY AS SELECT * FROM HR.JOB_HISTORY;
CREATE TABLE JOBS AS SELECT * FROM HR.JOBS;
CREATE TABLE JOB_GRADES AS SELECT * FROM HR.JOB_GRADES;


ALTER TABLE REGIONS ADD PRIMARY KEY (REGION_ID);
ALTER TABLE COUNTRIES ADD PRIMARY KEY (COUNTRY_ID);
ALTER TABLE LOCATIONS ADD PRIMARY KEY (LOCATION_ID);
ALTER TABLE JOBS ADD PRIMARY KEY (JOB_ID);
ALTER TABLE DEPARTMENTS ADD PRIMARY KEY (DEPARTMENT_ID);
ALTER TABLE EMPLOYEES ADD PRIMARY KEY (EMPLOYEE_ID);
ALTER TABLE JOB_GRADES ADD PRIMARY KEY (GRADE);
ALTER TABLE JOB_HISTORY ADD CONSTRAINT PK_job_history PRIMARY KEY (EMPLOYEE_ID, START_DATE);


ALTER TABLE Countries ADD FOREIGN KEY (Region_ID) REFERENCES Regions(Region_ID);
ALTER TABLE Locations ADD FOREIGN KEY (Country_ID) REFERENCES Countries(Country_ID);
ALTER TABLE Departments ADD FOREIGN KEY (Location_ID) REFERENCES Locations(Location_ID);
ALTER TABLE Employees ADD FOREIGN KEY (Job_ID) REFERENCES Jobs(Job_ID);
ALTER TABLE Job_history ADD FOREIGN KEY (Department_ID) REFERENCES Departments(Department_ID);
ALTER TABLE Job_history ADD FOREIGN KEY (Employee_ID) REFERENCES Employees(Employee_ID);
ALTER TABLE Job_history ADD FOREIGN KEY (Job_ID) REFERENCES Jobs(Job_ID);  
ALTER TABLE Departments ADD FOREIGN KEY (Manager_ID) REFERENCES Employees(Employee_ID);
ALTER TABLE Employees ADD FOREIGN KEY (Manager_ID) REFERENCES Employees(Employee_ID);
ALTER TABLE Employees ADD FOREIGN KEY (Department_ID) REFERENCES Departments(Department_ID);

SELECT e.LAST_NAME || e.SALARY AS wynagrodzenie FROM EMPLOYEES e WHERE (e.DEPARTMENT_ID = 20 OR e.DEPARTMENT_ID = 50) AND (e.SALARY > 2000 AND e.SALARY < 7000) ORDER BY e.LAST_NAME;

SELECT HIRE_DATE, LAST_NAME, USER_DEFINED FROM (
SELECT e.HIRE_DATE, e.LAST_NAME, e.FIRST_NAME AS USER_DEFINED FROM EMPLOYEES e WHERE e.MANAGER_ID IS NOT NULL AND EXTRACT(YEAR FROM HIRE_DATE) = 2005)
ORDER BY USER_DEFINED

SELECT e.FIRST_NAME || ' ' || e.LAST_NAME AS NAME, e.SALARY, e.PHONE_NUMBER FROM EMPLOYEES e 
WHERE e.LAST_NAME LIKE '__e%' AND e.FIRST_NAME LIKE '%%'
ORDER BY NAME DESC, e.SALARY ASC

SELECT e.FIRST_NAME, e.LAST_NAME, ROUND(MONTHS_BETWEEN(SYSDATE, e.HIRE_DATE)) AS MONTHS,
CASE
    WHEN ROUND(MONTHS_BETWEEN(SYSDATE, e.HIRE_DATE)) < 150 THEN e.SALARY * 0.1
    WHEN ROUND(MONTHS_BETWEEN(SYSDATE, e.HIRE_DATE)) > 200 THEN e.SALARY * 0.3
    ELSE e.SALARY * 0.2
END AS wysokość_dodatku
FROM EMPLOYEES e ORDER BY MONTHS